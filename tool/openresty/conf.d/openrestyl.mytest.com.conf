upstream backend {
   server 127.0.0.1:8080;
}
server {
    charset utf-8;
	#listen 443;
	#ssl on;
	listen       80;
	server_name openresty.mytest.com;
# 	add_header HTTP_X_FORWARDED_FOR  $http_x_forwarded_for;
    default_type text/plain;

    set $my_root_dir /data/htdocs/docker-lnmp/tool/openresty;

    # 设置用户ID
    set_by_lua_file $user_id $my_root_dir/lua/user_id.lua;

    location / {
        root $my_root_dir/html;
        index  index.html index.htm;
    }

    location /sayHelloLua {
        content_by_lua '
            ngx.say("hello world(sayHelloLua)!!!")
        ';
    }

    location /sayHello {
        content_by_lua_block {
            ngx.say("hello world!!!")
        }
    }

    location /ngxLuaFile {
        content_by_lua_file $my_root_dir/lua/hello-world.lua;
    }

    # 存储一个请求的上下文数据，拥有与当前请求相同的生命周期
    location /test {
        rewrite_by_lua_block {
            ngx.ctx.foo = 76
        }
        access_by_lua_block {
            ngx.ctx.foo = ngx.ctx.foo + 3
        }
        content_by_lua_block {
            ngx.print("----test----")
            ngx.say(ngx.ctx.foo)
        }
    }

    location /sub {
        content_by_lua_block {
            ngx.say("sub pre: ", ngx.ctx.blah)
            ngx.ctx.blah = 32
            ngx.say("sub post: ", ngx.ctx.blah)
        }
     }

    # main pre: 73
    # sub pre: nil
    # sub post: 32
    # main post: 73
    location /main {
        content_by_lua_block {
            ngx.ctx.blah = 73
            ngx.say("main pre: ", ngx.ctx.blah)
            local res = ngx.location.capture("/sub")
            ngx.print(res.body)
            ngx.say("main post: ", ngx.ctx.blah)
        }
    }

    location /new {
         content_by_lua_block {
             ngx.say(ngx.ctx.foo)
         }
     }

    location /orig {
        content_by_lua_block {
            ngx.ctx.foo = "hello"
            ngx.exec("/new")
        }
    }

    location /request_deal {
        content_by_lua_file $my_root_dir/lua/resty-request-deal.lua;
    }

    access_log  /usr/local/openresty/nginx/logs/openresty.mytest.com.log  access;
}
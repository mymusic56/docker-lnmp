daemon off;
user   nginx;
worker_processes  2;
worker_cpu_affinity 01 10; #for 2xcpu
#worker_cpu_affinity 0001 0010 0100 1000; # for 4xcpu
#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000; # for 8xcpu

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 10240;
events {
    use epoll;
    multi_accept on;
    worker_connections 10240;
}

# load modules compiled as Dynamic Shared Object (DSO)
dso {
    load ngx_http_concat_module.so;
    load ngx_http_lua_module.so; 
    load ngx_http_trim_filter_module.so;
    load ngx_http_footer_filter_module.so;
    #load ngx_http_slice_module.so;
    load ngx_http_upstream_session_sticky_module.so;
}

http {
    charset       utf-8;
    include       mime.types;
    default_type  application/octet-stream;

    sendfile       off;
    tcp_nopush     on;
    tcp_nodelay    on;
    server_tokens  off;

    keepalive_timeout         60;
    client_header_timeout     60;
    client_body_timeout       60;
    reset_timedout_connection on;
    send_timeout              60;
    client_max_body_size      20m;

    gzip              off;   # for php flush()
    proxy_buffering   off;  # for php flush()
    gzip_static       on;
    gzip_vary         on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_disable      "MSIE [1-6]\.";
    gzip_comp_level   5;
    gzip_min_length   1k;
    gzip_buffers      4 8k;
    gzip_types        image/svg+xml;
    gzip_types        text/plain;
    gzip_types        text/css;
    gzip_types        text/csv;
    gzip_types        text/xml;
    gzip_types        text/javascript
    gzip_types        application/json;
    gzip_types        application/ecmascript;
    gzip_types        application/javascript;
    gzip_types        application/x-javascript;
    gzip_types        application/xml;
    gzip_types        application/xml+rss;
    gzip_types        application/pdf;
    gzip_types        application/postscript;

    # for 502 bad gateway.
    fastcgi_connect_timeout      300;
    fastcgi_send_timeout         300;
    fastcgi_read_timeout         300;
    fastcgi_buffers              4 64k;
    fastcgi_buffer_size          64k;
    fastcgi_busy_buffers_size    128k;
    fastcgi_temp_file_write_size 128k;
    
    # cache informations about file descriptors, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # lua config.
    # lua_code_cache off; # only for dev
    lua_package_path "/opt/lua/?.lua;/opt/lua/lib/?.lua;;";
    #lua_shared_dict log_dict 20M;
    #lua_shared_dict result_dict 20M;

    #limit request
    geo $white_ip  {
        default 1;
        #127.0.0.1 0;
        192.168.31.1 0;
        192.168.31.31 0;
        121.12.170.137 0;
        # company
        58.17.232.21 0;
    }

    map $http_x_forwarded_for $user_real_ip {
        ""      $remote_addr;
        ~^(?P<first_addr>[0-9\.]+),?.*$ $first_addr;
    }

    map $white_ip  $ip_limit {
        1 $user_real_ip;  #1 $binary_remote_addr;
        0 "";
    } 

    # ip and req limit
    limit_conn_zone $ip_limit zone=limit_conn_per_ip:10m;
    limit_req_zone $user_real_ip $uri zone=limit_req_per_ip:20m rate=3r/s;

    # session and token limit for sem
    #limit_req_zone $user_real_ip $uri zone=req_limit_f:20m rate=50r/s;
    #limit_req_zone $cookie_waf_token zone=session_limit:10m rate=2r/s;
    #limit_req_zone $binary_remote_addr $uri zone=token_limit_r:10m rate=20r/s;
    #limit_req_zone $user_real_ip $uri zone=token_limit_r:20m rate=50r/s;
    #limit_req_zone $user_real_ip $uri zone=token_limit_f:20m rate=50r/s;

    # proxy optimize config.
    #proxy_buffer_size 32k;
    #proxy_buffers 4 64k;
    #proxy_busy_buffers_size 128k;

    # fix 400 error.
    client_header_buffer_size 16k;
    large_client_header_buffers 4 64k;

    # fix our doman name is too many -_-!.
    server_names_hash_bucket_size 256;

    # naxsi config.
    #include naxsi_core.rules;

    # pagespeed config.
    #include pagespeed_libraries.conf;
    #include pagespeed.conf;
    #include pagespeed_statslog.conf;

    # Add server served by header
    add_header  X-Served-By 'hj-docker-dev';

    # include nginx virtual host conf.
    include /etc/nginx/conf.d/*.conf;
}
version: "3"
services:
  php-fpm55:
    image: xg.cc/php-fpm:5.5
    container_name: php-fpm55
    restart: always
    volumes:
        - /data/htdocs/:/data/htdocs:rw # nocopy is important
        - /data/htdocs/hosts:/etc/dnsmasq.hosts
        - /data/htdocs/conf/php/php.ini:/etc/php5/fpm/php.ini
        - /var/data/log/php-fpm/:/var/log/php-fpm
        - /data/htdocs/conf/php/php_browscap.ini:/etc/php55/php_browscap.ini
        - /data/htdocs/conf/php/php-fpm.d/php-fpm.conf:/etc/php5/fpm/php-fpm.conf
        - /data/htdocs/conf/fdfs/php_client.conf:/etc/fdfs/client.conf
    dns: 127.0.0.1
    ports:
        - "9000:9000"
        # HOST:CONTAINER
    command: fpm
    extra_hosts:
      - "api.o.xgqqg.staging.me:192.168.29.143"
      - "dayouxuan.dn.staging.me:192.168.29.143"
      - "msg.a.xgqqg.staging:106.75.71.167"
  php-fpm7:
    image: myphp7.2:latest
    container_name: php-fpm7
    ports:
      - "9001:9000"
    volumes:
      - /data/htdocs/:/var/www/html/:rw
      - /data/htdocs/conf/php/php.ini:/usr/local/etc/php/php.ini:ro
      - /data/htdocs/conf/php/php-fpm.d/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - /var/log/php-fpm/:/var/log/php-fpm/:rw

#  mongodb30:
#    image: hj.cc/mongodb:3.0
#    container_name: mongodb30
#    restart: always
#    ports:
#        - "27017:27017"
#

  nginx:
    image: xg.cc/nginx:1.5
    container_name: nginx
#    restart: always
    ports:
        - "80:80"
    volumes:
        - /data/htdocs/:/data/htdocs:rw # nocopy is important
        - /data/htdocs/hosts:/etc/dnsmasq.hosts
        - /data/htdocs/conf/nginx/nginx.conf/nginx.conf:/etc/nginx/nginx.conf
        - /data/htdocs/conf/nginx/conf.d:/etc/nginx/conf.d
        - /data/var/log/nginx:/var/log/nginx
        - /data/opt/lua:/opt/lua
    command: run

  redis28:
#    image: hj.cc/redis:2.8
    image: myredis:latest
    container_name: redis28
    restart: always
    ports:
        - "6379:6379"
    volumes:
        - /data/htdocs/conf/redis/redis.conf:/etc/redis/redis.conf
        - /data/var/redis:/data/db:rw
#    command: server
  mysql:
    image: mysql:5.6
    container_name: mysql5.6
    ports:
      - "3306:3306"
    volumes:
      - /data/htdocs/conf/mysql/my.56.cnf:/etc/mysql/my.cnf:ro
      - /data/var/mysql5.6/data:/var/lib/mysql/:rw
      - /var/log/mysql5.6/:/var/log/mysql/:rw
      - /data/var/mysql5.6/mysql-files/:/var/lib/mysql-files:rw
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    #restart: always

#  percona:
#    image: hj.cc/percona:5.5
#    container_name: percona
#    restart: always
#    ports:
#        - "3306:3306"
#    volumes:
#        - /data/var/lib/mysql:/var/lib/mysql:ro
#    command: server
#
#  sphinx-server:
#    image: xg.cc/sphinx:2.2
#    container_name: sphinx-server
#    restart: always
#    ports:
#        - "9306:9306"
#        - "9312:9312"
#    volumes:
#        - /data/htdocs/conf/sphinx/:/etc/sphinx
#        - /data/var/lib/sphinx:/var/lib/sphinx
#    command: server

#  sphinx-worker:
#    image: xg.cc/sphinx:2.2
#    container_name: sphinx-worker
#    restart: always
#    volumes:
#        - /data/htdocs/conf/sphinx/:/etc/sphinx
#        - /data/var/lib/sphinx:/var/lib/sphinx
#    command: worker

  gearmand:
    image: xg.cc/gearmand:1.1
    ports:
        - "4730:4730"
    container_name: gearmand
    # depends_on:
        # - percona
    environment:
        - THREADS=2
        # - MYSQL_HOST=172.17.42.1
        # - MYSQL_USER=root
        # - MYSQL_PASS=dev2312
        # - MYSQL_DB=gearman
    command: run

  # swoft:
    # image: swoft/swoft:latest
    # container_name: swoft_dev
    # ports:
        # - "8080:8080"
        # - "8099:8099"
    # volumes:
        # - swoft_dev_sync:/var/www/swoft:ro
    # stdin_open: true
    # tty: true
    # privileged: true
    # entrypoint: ["php", "/var/www/swoft/bin/swoft", "start"]

  # order-worker:
    # build: ./dockerfiles/php72/
    # restart: always
    # command: ["php", "/data/htdocs/new-shop/order-worker/bin/swoft", "start"]
    # container_name: order-worker
    # ports:
        # - "8181:80"
        # - "8989:8099"
    # volumes:
        # - htdocs_sync:/data/htdocs:ro # rw is important

